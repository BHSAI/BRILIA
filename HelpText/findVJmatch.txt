findVJmatch will look for the best V and J gene match for a sequence in
the following order: find V preserving nts for J, and then find J This is
good for an initial light chain annotation.

  VDJdata = findVJmatch(VDJdata,VDJheader,DB)

  VDJdata = findVJmatch(VDJdata,VDJheader,DB,Param,Value,...)

  [VDJdata,BadIdx] = findVJmatch(...)

  INPUT
    VDJdata: main BRILIA data cell
    VDJheader: main BRILIA header cell
    DB: Gene database structure (getCurrentDatabase.m)

      Param           Value       Description
      --------------- ---------   ----------------------------------------
      'Update'        'y' 'n'     Yes or No to updating other fields
                                    besides the gene fields, such as CDR3,
                                    SHM, RefSeq.
      'Jreserve'      9           How may nts on right of Seq to preserve
                                    for J gene matching

  NOTE
    If CDR3start and CDR3end anchor locations are provided in VDJdata,
    findVJmatch will uses these location(s) to speed up V and J
    alignments. Use seedCDR3position.m prior to this to benefit from
    faster alignment. 

    Using seeded alignment is faster BUT could cause this to miss the best
    alignment. If you have the time, consider setting CDR3start and
    CDR3end values to 0 or empty in VDJdata.
 
    After finding V, it will check to see if a 'TTT' or 'TTC' of the 118F
    exists after the 'TGT' of the conserved 104C, that is in frame. If it
    does find one, it will force a J alignment such that the 118F are
    aligned. This helps if the input seq is too short and ends exactly on
    the conserved 118F. Otherwise, it either uses the seed from
    seedCDR3position or a full J alignment to determine the J segment.

  See also findVDJmatch
